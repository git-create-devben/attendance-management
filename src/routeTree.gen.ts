/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StudentImport } from './routes/student'
import { Route as QrcodescannerImport } from './routes/qrcodescanner'
import { Route as QrcodegeneratorImport } from './routes/qrcodegenerator'
import { Route as AttendanceImport } from './routes/attendance'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const StudentRoute = StudentImport.update({
  id: '/student',
  path: '/student',
  getParentRoute: () => rootRoute,
} as any)

const QrcodescannerRoute = QrcodescannerImport.update({
  id: '/qrcodescanner',
  path: '/qrcodescanner',
  getParentRoute: () => rootRoute,
} as any)

const QrcodegeneratorRoute = QrcodegeneratorImport.update({
  id: '/qrcodegenerator',
  path: '/qrcodegenerator',
  getParentRoute: () => rootRoute,
} as any)

const AttendanceRoute = AttendanceImport.update({
  id: '/attendance',
  path: '/attendance',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/attendance': {
      id: '/attendance'
      path: '/attendance'
      fullPath: '/attendance'
      preLoaderRoute: typeof AttendanceImport
      parentRoute: typeof rootRoute
    }
    '/qrcodegenerator': {
      id: '/qrcodegenerator'
      path: '/qrcodegenerator'
      fullPath: '/qrcodegenerator'
      preLoaderRoute: typeof QrcodegeneratorImport
      parentRoute: typeof rootRoute
    }
    '/qrcodescanner': {
      id: '/qrcodescanner'
      path: '/qrcodescanner'
      fullPath: '/qrcodescanner'
      preLoaderRoute: typeof QrcodescannerImport
      parentRoute: typeof rootRoute
    }
    '/student': {
      id: '/student'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/attendance': typeof AttendanceRoute
  '/qrcodegenerator': typeof QrcodegeneratorRoute
  '/qrcodescanner': typeof QrcodescannerRoute
  '/student': typeof StudentRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/attendance': typeof AttendanceRoute
  '/qrcodegenerator': typeof QrcodegeneratorRoute
  '/qrcodescanner': typeof QrcodescannerRoute
  '/student': typeof StudentRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/attendance': typeof AttendanceRoute
  '/qrcodegenerator': typeof QrcodegeneratorRoute
  '/qrcodescanner': typeof QrcodescannerRoute
  '/student': typeof StudentRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/attendance'
    | '/qrcodegenerator'
    | '/qrcodescanner'
    | '/student'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/attendance' | '/qrcodegenerator' | '/qrcodescanner' | '/student'
  id:
    | '__root__'
    | '/'
    | '/attendance'
    | '/qrcodegenerator'
    | '/qrcodescanner'
    | '/student'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AttendanceRoute: typeof AttendanceRoute
  QrcodegeneratorRoute: typeof QrcodegeneratorRoute
  QrcodescannerRoute: typeof QrcodescannerRoute
  StudentRoute: typeof StudentRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AttendanceRoute: AttendanceRoute,
  QrcodegeneratorRoute: QrcodegeneratorRoute,
  QrcodescannerRoute: QrcodescannerRoute,
  StudentRoute: StudentRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/attendance",
        "/qrcodegenerator",
        "/qrcodescanner",
        "/student"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/attendance": {
      "filePath": "attendance.tsx"
    },
    "/qrcodegenerator": {
      "filePath": "qrcodegenerator.tsx"
    },
    "/qrcodescanner": {
      "filePath": "qrcodescanner.tsx"
    },
    "/student": {
      "filePath": "student.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
